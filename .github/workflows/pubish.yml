name: Create and publish a Docker image

# Runs when dispatched, as well as
# when trunk is pushed
# when tags are pushed.
# and when a PR is made against trunk.
on:
  workflow_dispatch:
  push:
    branches:
      - 'trunk'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'trunk'

env:
  # Github Registry
  REGISTRY: ghcr.io
  # Use the repo name as the base image name.
  IMAGE_NAME: ${{ github.repository }}

jobs:
  audit:
    uses: ./.github/workflows/audit.yml

  tests:
    uses: ./.github/workflows/tests.yml

  build-and-push-image:
    runs-on: ubuntu-latest

    # Have this need tests to pass to then run
    needs:
      - audit
      - tests

    # Sets the permissions granted to the
    # `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # This step uses docker/metadata-action
      # See: https://github.com/docker/metadata-action#about
      # It uses the branch/tag name to determine the tag,
      # for actual releases use a tag that begins with a 'v' like v1.2.3
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          secrets: |
            "secret_key_base=${{ secrets.SECRET_KEY_BASE }}"

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

